spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://localhost:54321/order-service
    username: java
    password: spring
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: service
    hibernate:
      ddl-auto: none
  ## Zipkin and Sleuth properties
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  kafka:
    bootstrap-servers: http://localhost:19092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.zangura.orderservice.event.OrderPlacedEvent

server:
  error:
    include-message: always
    include-binding-errors: always
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

## Resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

  ## Resilience4j timeout properties
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s

  ## Resilience4j retry properties
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s